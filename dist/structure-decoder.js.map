{"version":3,"file":"structure-decoder.js","sources":["msgpack-decode.js","structure-decoder.js"],"sourcesContent":["\n// TODO license and attribution\n\n\nfunction Decoder(buffer, offset) {\n  offset = offset || 0;\n  var dataView = new DataView(buffer.buffer);\n\n  function map(length) {\n    var value = {};\n    for (var i = 0; i < length; i++) {\n      var key = parse();\n      value[key] = parse();\n    }\n    return value;\n  }\n\n  function bin(length) {\n    var value = buffer.subarray(offset, offset + length);\n    offset += length;\n    return value;\n  }\n\n  function str(length) {\n    var subarray = buffer.subarray(offset, offset + length);\n    var value = String.fromCharCode.apply(null, subarray);\n    offset += length;\n    return value;\n  }\n\n  function array(length) {\n    var value = new Array(length);\n    for (var i = 0; i < length; i++) {\n      value[i] = parse();\n    }\n    return value;\n  }\n\n  function parse() {\n    var type = buffer[offset];\n    var value, length, extType;\n    // Positive FixInt\n    if ((type & 0x80) === 0x00) {\n      offset++;\n      return type;\n    }\n    // FixMap\n    if ((type & 0xf0) === 0x80) {\n      length = type & 0x0f;\n      offset++;\n      return map(length);\n    }\n    // FixArray\n    if ((type & 0xf0) === 0x90) {\n      length = type & 0x0f;\n      offset++;\n      return array(length);\n    }\n    // FixStr\n    if ((type & 0xe0) === 0xa0) {\n      length = type & 0x1f;\n      offset++;\n      return str(length);\n    }\n    // Negative FixInt\n    if ((type & 0xe0) === 0xe0) {\n      value = dataView.getInt8(offset);\n      offset++;\n      return value;\n    }\n    switch (type) {\n    // nil\n    case 0xc0:\n      offset++;\n      return null;\n    // 0xc1: (never used)\n    // false\n    case 0xc2:\n      offset++;\n      return false;\n    // true\n    case 0xc3:\n      offset++;\n      return true;\n    // bin 8\n    case 0xc4:\n      length = dataView.getUint8(offset + 1);\n      offset += 2;\n      return bin(length);\n    // bin 16\n    case 0xc5:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return bin(length);\n    // bin 32\n    case 0xc6:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return bin(length);\n    // ext 8\n    case 0xc7:\n      length = dataView.getUint8(offset + 1);\n      extType = dataView.getUint8(offset + 2);\n      offset += 3;\n      return [extType, bin(length)];\n    // ext 16\n    case 0xc8:\n      length = dataView.getUint16(offset + 1);\n      extType = dataView.getUint8(offset + 3);\n      offset += 4;\n      return [extType, bin(length)];\n    // ext 32\n    case 0xc9:\n      length = dataView.getUint32(offset + 1);\n      extType = dataView.getUint8(offset + 5);\n      offset += 6;\n      return [extType, bin(length)];\n    // float 32\n    case 0xca:\n      value = dataView.getFloat32(offset + 1);\n      offset += 5;\n      return value;\n    // float 64\n    case 0xcb:\n      value = dataView.getFloat64(offset + 1);\n      offset += 9;\n      return value;\n    // uint8\n    case 0xcc:\n      value = buffer[offset + 1];\n      offset += 2;\n      return value;\n    // uint 16\n    case 0xcd:\n      value = dataView.getUint16(offset + 1);\n      offset += 3;\n      return value;\n    // uint 32\n    case 0xce:\n      value = dataView.getUint32(offset + 1);\n      offset += 5;\n      return value;\n    // uint64\n    case 0xcf:\n      value = dataView.getUint64(offset + 1);\n      offset += 9;\n      return value;\n    // int 8\n    case 0xd0:\n      value = dataView.getInt8(offset + 1);\n      offset += 2;\n      return value;\n    // int 16\n    case 0xd1:\n      value = dataView.getInt16(offset + 1);\n      offset += 3;\n      return value;\n    // int 32\n    case 0xd2:\n      value = dataView.getInt32(offset + 1);\n      offset += 5;\n      return value;\n    // int 64\n    case 0xd3:\n      value = dataView.getInt64(offset + 1);\n      offset += 9;\n      return value;\n\n    // fixext 1 / undefined\n    case 0xd4:\n      extType = dataView.getUint8(offset + 1);\n      value = dataView.getUint8(offset + 2);\n      offset += 3;\n      return (extType === 0 && value === 0) ? undefined : [extType, value];\n    // fixext 2\n    case 0xd5:\n      extType = dataView.getUint8(offset + 1);\n      offset += 2;\n      return [extType, bin(2)];\n    // fixext 4\n    case 0xd6:\n      extType = dataView.getUint8(offset + 1);\n      offset += 2;\n      return [extType, bin(4)];\n    // fixext 8\n    case 0xd7:\n      extType = dataView.getUint8(offset + 1);\n      offset += 2;\n      return [extType, bin(8)];\n    // fixext 16\n    case 0xd8:\n      extType = dataView.getUint8(offset + 1);\n      offset += 2;\n      return [extType, bin(16)];\n    // str 8\n    case 0xd9:\n      length = dataView.getUint8(offset + 1);\n      offset += 2;\n      return str(length);\n    // str 16\n    case 0xda:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return str(length);\n    // str 32\n    case 0xdb:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return str(length);\n    // array 16\n    case 0xdc:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return array(length);\n    // array 32\n    case 0xdd:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return array(length);\n    // map 16:\n    case 0xde:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return map(length);\n    // map 32\n    case 0xdf:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return map(length);\n    // buffer 16\n    case 0xd8:\n      length = dataView.getUint16(offset + 1);\n      offset += 3;\n      return buf(length);\n    // buffer 32\n    case 0xd9:\n      length = dataView.getUint32(offset + 1);\n      offset += 5;\n      return buf(length);\n    }\n\n    throw new Error(\"Unknown type 0x\" + type.toString(16));\n  }\n\n  this.parse = parse;\n}\n\nexport default function decode(buffer) {\n  var decoder = new Decoder(buffer);\n  var value = decoder.parse();\n  // if (decoder.offset !== buffer.length) throw new Error((buffer.length - decoder.offset) + \" trailing bytes\");\n  return value;\n}\n","\nimport decode from \"./msgpack-decode.js\";\n\n\n\nfunction getBuffer( view ){\n    var buf = view.buffer;\n    var offset = view.byteOffset;\n    var length = view.byteLength;\n    return buf.slice( offset, offset + length );\n}\n\nfunction getInt8( view, dataArray ){\n    if( !dataArray ){\n        dataArray = new Int8Array( getBuffer( view ) );\n    }else{\n        dataArray.set( new Int8Array( getBuffer( view ) ) );\n    }\n    return dataArray;\n}\n\nfunction getInt16( view, dataArray ){\n    var buf = getBuffer( view );\n    var dv = new DataView( buf );\n    var n = buf.byteLength;\n    if( !dataArray ) dataArray = new Int16Array( n / 2 );\n    for( var i = 0; i < n; i+=2 ){\n        dataArray[ i / 2 ] = dv.getInt16( i, false );\n    }\n    return dataArray;\n}\n\nfunction getInt32( view, dataArray ){\n    var buf = getBuffer( view );\n    var dv = new DataView( buf );\n    var n = buf.byteLength;\n    if( !dataArray ) dataArray = new Int32Array( n / 4 );\n    for( var i = 0; i < n; i+=4 ){\n        dataArray[ i / 4 ] = dv.getInt32( i, false );\n    }\n    return dataArray;\n}\n\nfunction decodeFloat( intArray, divisor, dataArray ){\n    var n = intArray.length;\n    if( !dataArray ) dataArray = new Float32Array( n );\n    for( var i = 0; i < n; ++i ){\n        dataArray[ i ] = intArray[ i ] / divisor;\n    }\n    return dataArray;\n}\n\nfunction decodeRunLength( array, dataArray ){\n    var i, il;\n    if( !dataArray ){\n        var fullLength = 0;\n        for( i = 0, il = array.length; i < il; i+=2 ){\n            fullLength += array[ i + 1 ];\n        }\n        dataArray = new array.constructor( fullLength );\n    }\n    var dataOffset = 0;\n    for( i = 0, il = array.length; i < il; i+=2 ){\n        var value = array[ i ];\n        var length = array[ i + 1 ];\n        for( var j = 0; j < length; ++j ){\n            dataArray[ dataOffset ] = value;\n            dataOffset += 1;\n        }\n    }\n    return dataArray;\n}\n\nfunction decodeDelta( dataArray ){\n    for( var i = 1, il = dataArray.length; i < il; ++i ){\n        dataArray[ i ] += dataArray[ i - 1 ];\n    }\n    return dataArray;\n}\n\nfunction decodeDeltaMulti( bigArray, smallArray, dataArray ){\n    var fullLength = ( bigArray.length / 2 ) + smallArray.length;\n    if( !dataArray ) dataArray = new Int32Array( fullLength );\n    var dataOffset = 0;\n    var smallOffset = 0;\n    for( var i = 0, il = bigArray.length; i < il; i+=2 ){\n        var value = bigArray[ i ];\n        var length = bigArray[ i + 1 ];\n        dataArray[ dataOffset ] = value;\n        if( i !== 0 ){\n            dataArray[ dataOffset ] += dataArray[ dataOffset - 1 ];\n        }\n        dataOffset += 1;\n        for( var j = 0; j < length; ++j ){\n            dataArray[ dataOffset ] = dataArray[ dataOffset - 1 ] + smallArray[ smallOffset ];\n            dataOffset += 1;\n            smallOffset += 1;\n        }\n    }\n    return dataArray;\n}\n\nfunction decodeFloatCombined( bigArray, smallArray, divisor, dataArray ){\n    var int32 = decodeDeltaMulti( getInt32( bigArray ), getInt16( smallArray ) );\n    return decodeFloat( int32, divisor, dataArray );\n}\n\nfunction getCounts( msgpack ){\n    var resOrder = getInt32( msgpack.resOrder );\n    var bondCount = 0;\n    for( var i = 0, il = resOrder.length; i < il; ++i ){\n        bondCount += msgpack.groupMap[ resOrder[ i ] ].bondOrders.length;\n    }\n    return {\n        bondCount: bondCount,\n        atomCount: msgpack.numAtoms,\n        residueCount: msgpack.resOrder.length / 4,\n        chainCount: msgpack.chainList.length / 4,\n        modelCount: msgpack.chainsPerModel.length\n    };\n}\n\n//\n\nfunction decodeData( msgpack, dataStores, params ){\n\n    var p = Object( {}, params );\n\n    var i, il, j, jl, k, kl;\n\n    var counts = getCounts( msgpack );\n    var bondCount = counts.bondCount;\n    var atomCount = counts.atomCount;\n    var residueCount = counts.residueCount;\n    var chainCount = counts.chainCount;\n    var modelCount = counts.modelCount;\n\n    var bondStore, atomStore, residueStore, chainStore, modelStore;\n\n    if( dataStores ){\n        bondStore = dataStores.bondStore;\n        atomStore = dataStores.atomStore;\n        residueStore = dataStores.residueStore;\n        chainStore = dataStores.chainStore;\n        modelStore = dataStores.modelStore;\n    }else{\n        bondStore = {\n            atomIndex1: new Uint32Array( bondCount ),\n            atomIndex2: new Uint32Array( bondCount ),\n            bondOrder: new Uint8Array( bondCount )\n        };\n        atomStore = {\n            residueIndex: new Uint32Array( atomCount ),\n            x: new Float32Array( atomCount ),\n            y: new Float32Array( atomCount ),\n            z: new Float32Array( atomCount ),\n            bfactor: new Float32Array( atomCount ),\n            element: new Uint8Array( 3 * atomCount ),\n            serial: new Int32Array( atomCount ),\n            hetero: new Int8Array( atomCount ),\n            altloc: new Uint8Array( atomCount ),\n            atomname: new Uint32Array( 4 * atomCount )\n        };\n        residueStore = {\n            chainIndex: new Uint32Array( residueCount ),\n            atomOffset: new Uint32Array( residueCount ),\n            atomCount: new Uint16Array( residueCount ),\n            resno: new Int32Array( residueCount ),\n            resname: new Uint8Array( 5 * residueCount ),\n            sstruc: new Uint8Array( residueCount )\n        };\n        chainStore = {\n            modelIndex: new Uint16Array( chainCount ),\n            residueOffset: new Uint32Array( chainCount ),\n            residueCount: new Uint32Array( chainCount ),\n            chainname: new Uint8Array( 4 * chainCount )\n        };\n        modelStore = {\n            chainOffset: new Uint32Array( modelCount ),\n            chainCount: new Uint32Array( modelCount )\n        };\n    }\n\n    decodeFloatCombined( msgpack.cartn_x_big, msgpack.cartn_x_small, 1000, atomStore.x );\n    decodeFloatCombined( msgpack.cartn_y_big, msgpack.cartn_y_small, 1000, atomStore.y );\n    decodeFloatCombined( msgpack.cartn_z_big, msgpack.cartn_z_small, 1000, atomStore.z );\n    decodeFloatCombined( msgpack.b_factor_big, msgpack.b_factor_small, 100, atomStore.bfactor );\n    decodeDelta( decodeRunLength( getInt32( msgpack._atom_site_id ), atomStore.serial ) );\n\n    for( i = 0, il = msgpack._atom_site_label_alt_id.length; i < il; i+=2 ){\n        var value = msgpack._atom_site_label_alt_id[ i ];\n        if( value === \"?\" ){\n            msgpack._atom_site_label_alt_id[ i ] = 0;\n        }else{\n            msgpack._atom_site_label_alt_id[ i ] = msgpack._atom_site_label_alt_id[ i ].charCodeAt( 0 );\n        }\n        msgpack._atom_site_label_alt_id[ i + 1 ] = parseInt( msgpack._atom_site_label_alt_id[ i + 1 ] );\n    }\n    decodeRunLength( msgpack._atom_site_label_alt_id, atomStore.altloc );\n\n    //\n\n    chainStore.chainname.set( getInt8( msgpack.chainList ) );\n\n    var chainOffset = 0;\n    msgpack.chainsPerModel.forEach( function( chainCount, i ){\n        modelStore.chainOffset[ i ] = chainOffset;\n        modelStore.chainCount[ i ] = chainCount;\n        for( j = 0; j < chainCount; ++j ){\n            chainStore.modelIndex[ j + chainOffset ] = i;\n        }\n        chainOffset += chainCount;\n    } );\n\n    var residueOffset = 0;\n    msgpack.groupsPerChain.forEach( function( residueCount, i ){\n        chainStore.residueOffset[ i ] = residueOffset;\n        chainStore.residueCount[ i ] = residueCount;\n        for( j = 0; j < residueCount; ++j ){\n            residueStore.chainIndex[ j + residueOffset ] = i;\n        }\n        residueOffset += residueCount;\n    } );\n\n    // \n\n    var sstrucMap = {\n        \"0\": \"i\",  // pi helix\n        \"1\": \"s\",  // bend\n        \"2\": \"h\",  // alpha helix\n        \"3\": \"e\",  // extended\n        \"4\": \"g\",  // 3-10 helix\n        \"5\": \"b\",  // bridge\n        \"6\": \"t\",  // turn\n        \"7\": \"l\",  // coil\n        \"-1\": \"\",  // NA\n    };\n\n    decodeDelta( decodeRunLength( getInt32( msgpack._atom_site_auth_seq_id ), residueStore.resno ) );\n\n    var resOrder = getInt32( msgpack.resOrder );\n    var secStruct = getInt8( msgpack.secStruct );\n    var atomOffset = 0;\n    var bondOffset = 0;\n\n    for( i = 0; i < residueCount; ++i ){\n\n        var resData = msgpack.groupMap[ resOrder[ i ] ];\n        var hetFlag = resData.hetFlag ? 1 : 0;\n        var atomInfo = resData.atomInfo;\n        var resAtomCount = atomInfo.length / 2;\n\n        var bondIndices = resData.bondIndices;\n        var bondOrders = resData.bondOrders;\n\n        for( j = 0, jl = bondOrders.length; j < jl; ++j ){\n            bondStore.atomIndex1[ bondOffset ] = atomOffset + bondIndices[ j * 2 ];\n            bondStore.atomIndex2[ bondOffset ] = atomOffset + bondIndices[ j * 2 + 1 ];\n            bondStore.bondOrder[ bondOffset ] = bondOrders[ j ];\n            bondOffset += 1;\n        }\n\n        //\n\n        residueStore.sstruc[ i ] = ( sstrucMap[ secStruct[ i ] ] || \"l\" ).charCodeAt();\n        residueStore.atomOffset[ i ] = atomOffset;\n        residueStore.atomCount[ i ] = resAtomCount;\n\n        var resName = resData.resName;\n        for( j = 0, jl = resName.length; j < jl; ++j ){\n            residueStore.resname[ i * 5 + j ] = resName.charCodeAt( j );\n        }\n\n        for( j = 0; j < resAtomCount; ++j ){\n\n            var atomname = atomInfo[ j * 2 + 1 ];\n            for( k = 0, kl = atomname.length; k < kl; ++k ){\n                atomStore.atomname[ atomOffset * 4 + k ] = atomname.charCodeAt( k );\n            }\n\n            var element = atomInfo[ j * 2 ];\n            for( k = 0, kl = element.length; k < kl; ++k ){\n                atomStore.element[ atomOffset * 3 + k ] = element.charCodeAt( k );\n            }\n\n            atomStore.hetero[ atomOffset ] = hetFlag;\n            atomStore.residueIndex[ atomOffset ] = i;\n\n            atomOffset += 1;\n\n        }\n\n    }\n\n    return {\n        bondStore: bondStore,\n        atomStore: atomStore,\n        residueStore: residueStore,\n        chainStore: chainStore,\n        modelStore: modelStore\n    };\n\n}\n\n//\n\nvar StructureDecoder = function( bin ){\n\n    var self = this;\n\n    if( bin instanceof ArrayBuffer ){\n        self.buffer = bin;\n        bin = new Uint8Array( bin );\n    }else{\n        self.buffer = bin.buffer;\n    }\n\n    var t0 = performance.now();\n    var msgpack = decode( bin );\n    console.log( msgpack )\n    var t1 = performance.now();\n    this.__msgpackDecodeTimeMs = t1 - t0;\n\n    var counts = getCounts( msgpack );\n    var bondCount = counts.bondCount;\n    var atomCount = counts.atomCount;\n    var residueCount = counts.residueCount;\n    var chainCount = counts.chainCount;\n    var modelCount = counts.modelCount;\n\n    function sdecode( dataStores, params ){\n        var t0 = performance.now();\n        var d = decodeData( msgpack, dataStores, params );\n        var t1 = performance.now();\n        self.__structureDecodeTimeMs = t1 - t0;\n        self.bondStore = d.bondStore;\n        self.atomStore = d.atomStore;\n        self.residueStore = d.residueStore;\n        self.chainStore = d.chainStore;\n        self.modelStore = d.modelStore;\n    }\n\n    function getBond( index ){\n        return [\n            self.bondStore.atomIndex1[ index ],\n            self.bondStore.atomIndex2[ index ],\n            self.bondStore.bondOrder[ index ]\n        ];\n    }\n\n    function getAtom( index ){\n        var element = \"\";\n        var k, code;\n        for( k = 0; k < 3; ++k ){\n            code = self.atomStore.element[ 3 * index + k ];\n            if( code ){\n                element += String.fromCharCode( code );\n            }else{\n                break;\n            }\n        }\n        var atomname = \"\";\n        for( k = 0; k < 4; ++k ){\n            code = self.atomStore.atomname[ 4 * index + k ];\n            if( code ){\n                atomname += String.fromCharCode( code );\n            }else{\n                break;\n            }\n        }\n        return [\n            self.atomStore.residueIndex[ index ],\n            self.atomStore.x[ index ],\n            self.atomStore.y[ index ],\n            self.atomStore.z[ index ],\n            self.atomStore.bfactor[ index ],\n            element,\n            self.atomStore.serial[ index ],\n            self.atomStore.hetero[ index ],\n            String.fromCharCode( self.atomStore.altloc[ index ] ),\n            atomname\n        ];\n    }\n\n    function getResidue( index ){\n        var resname = \"\";\n        for( var k = 0; k < 5; ++k ){\n            var code = self.residueStore.resname[ 5 * index + k ];\n            if( code ){\n                resname += String.fromCharCode( code );\n            }else{\n                break;\n            }\n        }\n        return [\n            self.residueStore.chainIndex[ index ],\n            self.residueStore.atomOffset[ index ],\n            self.residueStore.atomCount[ index ],\n            self.residueStore.resno[ index ],\n            resname,\n            String.fromCharCode( self.residueStore.sstruc[ index ] ),\n        ];\n    }\n\n    function getChain( index ){\n        var chainname = \"\";\n        for( var k = 0; k < 4; ++k ){\n            var code = self.chainStore.chainname[ 4 * index + k ];\n            if( code ){\n                chainname += String.fromCharCode( code );\n            }else{\n                break;\n            }\n        }\n        return [\n            self.chainStore.modelIndex[ index ],\n            self.chainStore.residueOffset[ index ],\n            self.chainStore.residueCount[ index ],\n            chainname,\n        ];\n    }\n\n    function getModel( index ){\n        return [\n            self.modelStore.chainOffset[ index ],\n            self.modelStore.chainCount[ index ]\n        ];\n    }\n\n    function eachBond( callback ){\n        for( var i = 0; i < bondCount; ++i ){\n            callback.apply( null, self.getBond( i ) );\n        }\n    }\n\n    function eachAtom( callback ){\n        for( var i = 0; i < atomCount; ++i ){\n            callback.apply( null, self.getAtom( i ) );\n        }\n    }\n\n    function eachResidue( callback ){\n        for( var i = 0; i < residueCount; ++i ){\n            callback.apply( null, self.getResidue( i ) );\n        }\n    }\n    \n    function eachChain( callback ){\n        for( var i = 0; i < chainCount; ++i ){\n            callback.apply( null, self.getChain( i ) );\n        }\n    }\n    \n    function eachModel( callback ){\n        for( var i = 0; i < modelCount; ++i ){\n            callback.apply( null, self.getModel( i ) );\n        }\n    }\n\n    // API\n\n    this.unitCell = msgpack.unitCell;\n    this.spaceGroup = msgpack.spaceGroup;\n\n    this.bondCount = bondCount;\n    this.atomCount = atomCount;\n    this.residueCount = residueCount;\n    this.chainCount = chainCount;\n    this.modelCount = modelCount;\n\n    this.bondStore = undefined;\n    this.atomStore = undefined;\n    this.residueStore = undefined;\n    this.chainStore = undefined;\n    this.modelStore = undefined;\n\n    this.decode = sdecode;\n\n    this.getBond = getBond;\n    this.getAtom = getAtom;\n    this.getResidue = getResidue;\n    this.getChain = getChain;\n    this.getModel = getModel;\n\n    this.eachBond = eachBond;\n    this.eachAtom = eachAtom;\n    this.eachResidue = eachResidue;\n    this.eachChain = eachChain;\n    this.eachModel = eachModel;\n\n};\n\n\nexport default StructureDecoder;\n"],"names":[],"mappings":"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","sourceRoot":"/source/"}